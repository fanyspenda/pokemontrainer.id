// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"
	pokeballs "pokemontrainer/business/pokeballs"

	mock "github.com/stretchr/testify/mock"
)

// UseCases is an autogenerated mock type for the UseCases type
type UseCases struct {
	mock.Mock
}

// AddPokeball provides a mock function with given fields: ctx, name, successRate
func (_m *UseCases) AddPokeball(ctx context.Context, name string, successRate float32) (pokeballs.Domain, error) {
	ret := _m.Called(ctx, name, successRate)

	var r0 pokeballs.Domain
	if rf, ok := ret.Get(0).(func(context.Context, string, float32) pokeballs.Domain); ok {
		r0 = rf(ctx, name, successRate)
	} else {
		r0 = ret.Get(0).(pokeballs.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, float32) error); ok {
		r1 = rf(ctx, name, successRate)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
